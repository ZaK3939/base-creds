export default [
  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
  { inputs: [{ internalType: 'address', name: 'target', type: 'address' }], name: 'AddressEmptyCode', type: 'error' },
  { inputs: [], name: 'AddressNotSigned', type: 'error' },
  { inputs: [{ internalType: 'uint256', name: 'credId', type: 'uint256' }], name: 'AlreadyClosed', type: 'error' },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId', type: 'uint256' },
      { internalType: 'uint256', name: 'periodEnds', type: 'uint256' },
    ],
    name: 'ClearingPeriodNotOver',
    type: 'error',
  },
  { inputs: [], name: 'CredNotClosed', type: 'error' },
  { inputs: [], name: 'DuplicateCredId', type: 'error' },
  { inputs: [], name: 'ECDSAInvalidSignature', type: 'error' },
  {
    inputs: [{ internalType: 'uint256', name: 'length', type: 'uint256' }],
    name: 'ECDSAInvalidSignatureLength',
    type: 'error',
  },
  { inputs: [{ internalType: 'bytes32', name: 's', type: 'bytes32' }], name: 'ECDSAInvalidSignatureS', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'implementation', type: 'address' }],
    name: 'ERC1967InvalidImplementation',
    type: 'error',
  },
  { inputs: [], name: 'ERC1967NonPayable', type: 'error' },
  { inputs: [], name: 'EmptyArray', type: 'error' },
  { inputs: [], name: 'EmptyBatchOperation', type: 'error' },
  { inputs: [], name: 'EnforcedPause', type: 'error' },
  {
    inputs: [{ internalType: 'bytes32', name: 'key', type: 'bytes32' }],
    name: 'EnumerableMapNonexistentKey',
    type: 'error',
  },
  { inputs: [], name: 'ExpectedPause', type: 'error' },
  { inputs: [], name: 'FailedInnerCall', type: 'error' },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId', type: 'uint256' },
      { internalType: 'uint256', name: 'lastSignalTimestamp', type: 'uint256' },
      { internalType: 'uint256', name: 'gracePeriodEnd', type: 'uint256' },
    ],
    name: 'GracePeriodNotOver',
    type: 'error',
  },
  { inputs: [], name: 'IndexOutofBounds', type: 'error' },
  { inputs: [], name: 'InsufficientBatchPayment', type: 'error' },
  { inputs: [], name: 'InsufficientPayment', type: 'error' },
  { inputs: [], name: 'InsufficientShares', type: 'error' },
  { inputs: [], name: 'InvalidAddressZero', type: 'error' },
  { inputs: [], name: 'InvalidAmount', type: 'error' },
  { inputs: [], name: 'InvalidArrayLength', type: 'error' },
  { inputs: [], name: 'InvalidCredId', type: 'error' },
  { inputs: [], name: 'InvalidCredType', type: 'error' },
  { inputs: [], name: 'InvalidInitialization', type: 'error' },
  { inputs: [], name: 'InvalidMerkleRoot', type: 'error' },
  { inputs: [], name: 'InvalidPaginationParameters', type: 'error' },
  { inputs: [], name: 'InvalidRoyaltyRange', type: 'error' },
  { inputs: [], name: 'InvalidVerificationType', type: 'error' },
  { inputs: [], name: 'MaxSupplyReached', type: 'error' },
  { inputs: [], name: 'NotInitializing', type: 'error' },
  { inputs: [{ internalType: 'address', name: 'owner', type: 'address' }], name: 'OwnableInvalidOwner', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  { inputs: [], name: 'PriceBelowLimit', type: 'error' },
  { inputs: [], name: 'PriceExceedsLimit', type: 'error' },
  { inputs: [], name: 'Reentrancy', type: 'error' },
  {
    inputs: [
      { internalType: 'uint256', name: 'currentBlock', type: 'uint256' },
      { internalType: 'uint256', name: 'unlockBlock', type: 'uint256' },
    ],
    name: 'SignalLockPeriodNotPassed',
    type: 'error',
  },
  { inputs: [], name: 'SignatureExpired', type: 'error' },
  { inputs: [], name: 'UUPSUnauthorizedCallContext', type: 'error' },
  {
    inputs: [{ internalType: 'bytes32', name: 'slot', type: 'bytes32' }],
    name: 'UUPSUnsupportedProxiableUUID',
    type: 'error',
  },
  { inputs: [], name: 'Unauthorized', type: 'error' },
  { inputs: [], name: 'UnauthorizedCaller', type: 'error' },
  { inputs: [], name: 'WrongCredId', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
      { indexed: true, internalType: 'address', name: 'whitelistedAddress', type: 'address' },
    ],
    name: 'AddedToWhitelist',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'uint256', name: 'credId', type: 'uint256' }],
    name: 'CredCleared',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'uint256', name: 'credId', type: 'uint256' }],
    name: 'CredClosed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'creator', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'credId', type: 'uint256' },
      { indexed: false, internalType: 'string', name: 'credURL', type: 'string' },
      { indexed: false, internalType: 'string', name: 'credType', type: 'string' },
      { indexed: false, internalType: 'string', name: 'verificationType', type: 'string' },
    ],
    name: 'CredCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'creator', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'credId', type: 'uint256' },
      { indexed: false, internalType: 'string', name: 'credURL', type: 'string' },
      { indexed: false, internalType: 'uint16', name: 'signalRoyalty', type: 'uint16' },
      { indexed: false, internalType: 'uint16', name: 'unSignalRoyalty', type: 'uint16' },
    ],
    name: 'CredUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint64', name: 'version', type: 'uint64' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'changer', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'credId', type: 'uint256' },
      { indexed: false, internalType: 'bytes32', name: 'root', type: 'bytes32' },
    ],
    name: 'MerkleTreeSetUp',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferStarted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'phiRewardsAddress', type: 'address' }],
    name: 'PhiRewardsAddressSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'phiSignerAddress', type: 'address' }],
    name: 'PhiSignerAddressSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'changer', type: 'address' },
      { indexed: false, internalType: 'address', name: 'newDestination', type: 'address' },
    ],
    name: 'ProtocolFeeDestinationChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'changer', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'newFee', type: 'uint256' },
    ],
    name: 'ProtocolFeePercentChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
      { indexed: true, internalType: 'address', name: 'unwhitelistedAddress', type: 'address' },
    ],
    name: 'RemovedFromWhitelist',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'creator', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'credId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'Amount', type: 'uint256' },
    ],
    name: 'Royalty',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'curator', type: 'address' },
      { indexed: true, internalType: 'uint256', name: 'credId', type: 'uint256' },
      { indexed: false, internalType: 'bool', name: 'isBuy', type: 'bool' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'ethAmount', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'protocolEthAmount', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'supply', type: 'uint256' },
    ],
    name: 'Trade',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'implementation', type: 'address' }],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'SIGNAL_LOCK_PERIOD',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'UPGRADE_INTERFACE_VERSION',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'address', name: 'sender_', type: 'address' },
    ],
    name: '_addCredIdPerAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'address', name: 'sender_', type: 'address' },
    ],
    name: '_removeCredIdPerAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'acceptOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [{ internalType: 'address', name: 'address_', type: 'address' }],
    name: 'addToWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'credIds_', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'amounts_', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'maxPrices_', type: 'uint256[]' },
      { internalType: 'address', name: 'curator_', type: 'address' },
    ],
    name: 'batchSignalCred',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'credIds_', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'amounts_', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'minPrices_', type: 'uint256[]' },
    ],
    name: 'batchUnSignalCred',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'creator_', type: 'address' },
      { internalType: 'bytes', name: 'signedData_', type: 'bytes' },
      { internalType: 'bytes', name: 'signature_', type: 'bytes' },
      { internalType: 'uint16', name: 'signalRoyalty_', type: 'uint16' },
      { internalType: 'uint16', name: 'unSignalRoyalty_', type: 'uint16' },
    ],
    name: 'createCred',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'credIdCounter',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'credId_', type: 'uint256' }],
    name: 'credInfo',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'creator', type: 'address' },
          { internalType: 'uint256', name: 'currentSupply', type: 'uint256' },
          { internalType: 'string', name: 'credURL', type: 'string' },
          { internalType: 'string', name: 'credType', type: 'string' },
          { internalType: 'string', name: 'verificationType', type: 'string' },
          { internalType: 'address', name: 'bondingCurve', type: 'address' },
          { internalType: 'uint16', name: 'signalRoyalty', type: 'uint16' },
          { internalType: 'uint16', name: 'unSignalRoyalty', type: 'uint16' },
          { internalType: 'uint40', name: 'createdAt', type: 'uint40' },
          { internalType: 'uint40', name: 'updatedAt', type: 'uint40' },
          { internalType: 'uint256', name: 'latestActiveTimestamp', type: 'uint256' },
        ],
        internalType: 'struct ICred.PhiCred',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'credId', type: 'uint256' }],
    name: 'credsMerkeRoot',
    outputs: [{ internalType: 'bytes32', name: 'rood', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'priceCurve', type: 'address' }],
    name: 'curatePriceWhitelist',
    outputs: [{ internalType: 'bool', name: 'enable', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'credIds_', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'amounts_', type: 'uint256[]' },
    ],
    name: 'getBatchBuyPrice',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'credIds_', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'amounts_', type: 'uint256[]' },
    ],
    name: 'getBatchSellPrice',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'credId_', type: 'uint256' }],
    name: 'getCreatorRoyalty',
    outputs: [
      { internalType: 'uint16', name: 'signalRoyalty', type: 'uint16' },
      { internalType: 'uint16', name: 'unSignalRoyalty', type: 'uint16' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'uint256', name: 'amount_', type: 'uint256' },
    ],
    name: 'getCredBuyPrice',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'uint256', name: 'amount_', type: 'uint256' },
    ],
    name: 'getCredBuyPriceWithFee',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'credId_', type: 'uint256' }],
    name: 'getCredCreator',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'uint256', name: 'amount_', type: 'uint256' },
    ],
    name: 'getCredSellPrice',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'uint256', name: 'amount_', type: 'uint256' },
    ],
    name: 'getCredSellPriceWithFee',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'credId_', type: 'uint256' }],
    name: 'getCuratorAddressLength',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'uint256', name: 'start_', type: 'uint256' },
      { internalType: 'uint256', name: 'stop_', type: 'uint256' },
    ],
    name: 'getCuratorAddresses',
    outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'uint256', name: 'start_', type: 'uint256' },
      { internalType: 'uint256', name: 'stop_', type: 'uint256' },
    ],
    name: 'getCuratorAddressesWithAmount',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'curator', type: 'address' },
          { internalType: 'uint256', name: 'signalAmount', type: 'uint256' },
        ],
        internalType: 'struct ICred.CuratorData[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'credId_', type: 'uint256' }],
    name: 'getCurrentSupply',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'curator_', type: 'address' },
      { internalType: 'uint256', name: 'start_', type: 'uint256' },
      { internalType: 'uint256', name: 'stop_', type: 'uint256' },
    ],
    name: 'getPositionsForCurator',
    outputs: [
      { internalType: 'uint256[]', name: 'credIds', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'credId_', type: 'uint256' }],
    name: 'getRoot',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'address', name: 'curator_', type: 'address' },
    ],
    name: 'getSignalNumber',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'phiSignerAddress_', type: 'address' },
      { internalType: 'address', name: 'ownerAddress_', type: 'address' },
      { internalType: 'address', name: 'protocolFeeDestination_', type: 'address' },
      { internalType: 'uint256', name: 'protocolFeePercent_', type: 'uint256' },
      { internalType: 'address', name: 'bondingCurveAddress_', type: 'address' },
      { internalType: 'address', name: 'phiRewardsAddress_', type: 'address' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'credId_', type: 'uint256' }],
    name: 'isExist',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'address', name: 'curator_', type: 'address' },
    ],
    name: 'isSignaled',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId', type: 'uint256' },
      { internalType: 'address', name: 'curator', type: 'address' },
    ],
    name: 'lastSignalBlock',
    outputs: [{ internalType: 'uint256', name: 'blocknumber', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'pause', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [],
    name: 'paused',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'phiRewardsAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'phiSignerAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeeDestination',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeePercent',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'address_', type: 'address' }],
    name: 'removeFromWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [{ internalType: 'address', name: 'phiRewardsAddress_', type: 'address' }],
    name: 'setPhiRewardsAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'phiSignerAddress_', type: 'address' }],
    name: 'setPhiSignerAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'protocolFeeDestination_', type: 'address' }],
    name: 'setProtocolFeeDestination',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'protocolFeePercent_', type: 'uint256' }],
    name: 'setProtocolFeePercent',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'uint256', name: 'amount_', type: 'uint256' },
      { internalType: 'uint256', name: 'maxPrice_', type: 'uint256' },
    ],
    name: 'signalCred',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'uint256', name: 'amount_', type: 'uint256' },
      { internalType: 'address', name: 'curator_', type: 'address' },
      { internalType: 'uint256', name: 'maxPrice_', type: 'uint256' },
    ],
    name: 'signalCredFor',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'unPause', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'uint256', name: 'credId_', type: 'uint256' },
      { internalType: 'uint256', name: 'amount_', type: 'uint256' },
      { internalType: 'uint256', name: 'minPrice_', type: 'uint256' },
    ],
    name: 'unSignalCred',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes', name: 'signedData_', type: 'bytes' },
      { internalType: 'bytes', name: 'signature_', type: 'bytes' },
      { internalType: 'uint16', name: 'signalRoyalty_', type: 'uint16' },
      { internalType: 'uint16', name: 'unSignalRoyalty_', type: 'uint16' },
    ],
    name: 'updateCred',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'newImplementation', type: 'address' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'version',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'pure',
    type: 'function',
  },
  { stateMutability: 'payable', type: 'receive' },
] as const;
